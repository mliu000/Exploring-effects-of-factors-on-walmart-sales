library(dplyr)
# Set working directiry
data = read.csv("Walmart_Sales.csv") |> na.omit()
setwd("~/Uni Courses/Year 3 courses/STAT 306/Group project")
# Set working directiry
data = read.csv("Group Project/Walmart_Sales.csv") |> na.omit()
# Set working directiry
data = read.csv("Group Project\Walmart_Sales.csv") |> na.omit()
# Set working directiry
data = read.csv("Group project/Walmart_Sales.csv") |> na.omit()
# Set working directiry
data = read.csv("Group project\Walmart_Sales.csv") |> na.omit()
# Set working directiry
data = read.csv("\Group project\Walmart_Sales.csv") |> na.omit()
# Set working directiry
data = read.csv("/Group project/Walmart_Sales.csv") |> na.omit()
# Set working directiry
data = read.csv("Walmart_Sales.csv") |> na.omit()
# Modify the contents of the data below
#############
# Change the temperature to celcius
data$Temperature = round((data$Temperature - 32)*(5/9), 2)
# Round the decimal places for the following columns
data$Fuel_Price = round(data$Fuel_Price, 2)
data$CPI = round(data$CPI, 2)
data$Weekly_Sales = round(data$Weekly_Sales, 0)
# Convert Holiday flag to factor (because it's categorical)
data$Holiday_Flag = factor(data$Holiday_Flag)
############
# We want to select the store that represents all the stores well. Therefore, we will select the store that has the median combined average weekly sales and variance of weekly sales. To do so, we will calculate the average and var of weekly sales for every store, then assign a ranking for both statistics, sum them up, then pick the store with the median sum of the ranks.
# First, obtain the summary statistics for each store
data_summary = data |> group_by(Store) |> summarize(mean_weekly_sales = mean(Weekly_Sales), var_weekly_sales = var(Weekly_Sales)) |> mutate(rank_mean_weekly_sales = rank(mean_weekly_sales), rank_var_weekly_sales = rank(var_weekly_sales)) |> mutate(sum_of_ranks = rank_mean_weekly_sales + rank_var_weekly_sales)
# Then raange the rows based on the overall rank
data_summary = data_summary |> arrange(sum_of_ranks)
# Extract the store number we choose (the store with median combined rank)
chosen_store = data_summary[round(nrow(data_summary)/2, 0), 1] |> pull()
print(chosen_store)
# We will use store 40 as our representative
# The boxplot illustrates the average weekly sales for each store, as well as the variance of the sales across its weeks. We can see that store 40 is reasonable
boxplot(data$Weekly_Sales~data$Store, main = "Side by Side boxplot of the weekly sales of all stores", xlab = "Weekly Sales", ylab = "Store Number")
ggplot(data = data, aes(x = factor(Store), y = Weekly_Sales)) +
geom_boxplot() +
labs(title = "Side by Side boxplot of the weekly sales of all stores", x = "Store Number", y = "Weekly Sales (USD)")
library(dplyr)
# Set working directiry
data = read.csv("Walmart_Sales.csv") |> na.omit()
# Modify the contents of the data below
#############
# Change the temperature to celcius
data$Temperature = round((data$Temperature - 32)*(5/9), 2)
# Round the decimal places for the following columns
data$Fuel_Price = round(data$Fuel_Price, 2)
data$CPI = round(data$CPI, 2)
data$Weekly_Sales = round(data$Weekly_Sales, 0)
# Convert Holiday flag to factor (because it's categorical)
data$Holiday_Flag = factor(data$Holiday_Flag)
############
# We want to select the store that represents all the stores well. Therefore, we will select the store that has the median combined average weekly sales and variance of weekly sales. To do so, we will calculate the average and var of weekly sales for every store, then assign a ranking for both statistics, sum them up, then pick the store with the median sum of the ranks.
# First, obtain the summary statistics for each store
data_summary = data |> group_by(Store) |> summarize(mean_weekly_sales = mean(Weekly_Sales), var_weekly_sales = var(Weekly_Sales)) |> mutate(rank_mean_weekly_sales = rank(mean_weekly_sales), rank_var_weekly_sales = rank(var_weekly_sales)) |> mutate(sum_of_ranks = rank_mean_weekly_sales + rank_var_weekly_sales)
# Then raange the rows based on the overall rank
data_summary = data_summary |> arrange(sum_of_ranks)
# Extract the store number we choose (the store with median combined rank)
chosen_store = data_summary[round(nrow(data_summary)/2, 0), 1] |> pull()
print(chosen_store)
# We will use store 40 as our representative
# The boxplot illustrates the average weekly sales for each store, as well as the variance of the sales across its weeks. We can see that store 40 is reasonable
boxplot(data$Weekly_Sales~data$Store, main = "Side by Side boxplot of the weekly sales of all stores", xlab = "Weekly Sales", ylab = "Store Number")
ggplot(data = data, aes(x = factor(Store), y = Weekly_Sales)) +
geom_boxplot() +
labs(title = "Side by Side boxplot of the weekly sales of all stores", x = "Store Number", y = "Weekly Sales (USD)")
library(dplyr)
library(dplyr)
library(ggplot2)
# Set working directiry
data = read.csv("Walmart_Sales.csv") |> na.omit()
# Modify the contents of the data below
#############
# Change the temperature to celcius
data$Temperature = round((data$Temperature - 32)*(5/9), 2)
# Round the decimal places for the following columns
data$Fuel_Price = round(data$Fuel_Price, 2)
data$CPI = round(data$CPI, 2)
data$Weekly_Sales = round(data$Weekly_Sales, 0)
# Convert Holiday flag to factor (because it's categorical)
data$Holiday_Flag = factor(data$Holiday_Flag)
############
# We want to select the store that represents all the stores well. Therefore, we will select the store that has the median combined average weekly sales and variance of weekly sales. To do so, we will calculate the average and var of weekly sales for every store, then assign a ranking for both statistics, sum them up, then pick the store with the median sum of the ranks.
# First, obtain the summary statistics for each store
data_summary = data |> group_by(Store) |> summarize(mean_weekly_sales = mean(Weekly_Sales), var_weekly_sales = var(Weekly_Sales)) |> mutate(rank_mean_weekly_sales = rank(mean_weekly_sales), rank_var_weekly_sales = rank(var_weekly_sales)) |> mutate(sum_of_ranks = rank_mean_weekly_sales + rank_var_weekly_sales)
# Then raange the rows based on the overall rank
data_summary = data_summary |> arrange(sum_of_ranks)
# Extract the store number we choose (the store with median combined rank)
chosen_store = data_summary[round(nrow(data_summary)/2, 0), 1] |> pull()
print(chosen_store)
# We will use store 40 as our representative
# The boxplot illustrates the average weekly sales for each store, as well as the variance of the sales across its weeks. We can see that store 40 is reasonable
boxplot(data$Weekly_Sales~data$Store, main = "Side by Side boxplot of the weekly sales of all stores", xlab = "Weekly Sales", ylab = "Store Number")
ggplot(data = data, aes(x = factor(Store), y = Weekly_Sales)) +
geom_boxplot() +
labs(title = "Side by Side boxplot of the weekly sales of all stores", x = "Store Number", y = "Weekly Sales (USD)")
library(dplyr)
library(ggplot2)
# Set working directiry
data = read.csv("Walmart_Sales.csv") |> na.omit()
# Modify the contents of the data below
#############
# Change the temperature to celcius
data$Temperature = round((data$Temperature - 32)*(5/9), 2)
# Round the decimal places for the following columns
data$Fuel_Price = round(data$Fuel_Price, 2)
data$CPI = round(data$CPI, 2)
data$Weekly_Sales = round(data$Weekly_Sales, 0)
# Convert Holiday flag to factor (because it's categorical)
data$Holiday_Flag = factor(data$Holiday_Flag)
############
# We want to select the store that represents all the stores well. Therefore, we will select the store that has the median combined average weekly sales and variance of weekly sales. To do so, we will calculate the average and var of weekly sales for every store, then assign a ranking for both statistics, sum them up, then pick the store with the median sum of the ranks.
# First, obtain the summary statistics for each store
data_summary = data |> group_by(Store) |> summarize(mean_weekly_sales = mean(Weekly_Sales), var_weekly_sales = var(Weekly_Sales)) |> mutate(rank_mean_weekly_sales = rank(mean_weekly_sales), rank_var_weekly_sales = rank(var_weekly_sales)) |> mutate(sum_of_ranks = rank_mean_weekly_sales + rank_var_weekly_sales)
# Then raange the rows based on the overall rank
data_summary = data_summary |> arrange(sum_of_ranks)
# Extract the store number we choose (the store with median combined rank)
chosen_store = data_summary[round(nrow(data_summary)/2, 0), 1] |> pull()
print(chosen_store)
# We will use store 40 as our representative
# The boxplot illustrates the average weekly sales for each store, as well as the variance of the sales across its weeks. We can see that store 40 is reasonable
boxplot(data$Weekly_Sales~data$Store, main = "Side by Side boxplot of the weekly sales of all stores", xlab = "Weekly Sales", ylab = "Store Number")
ggplot(data = data, aes(x = factor(Store), y = Weekly_Sales)) +
geom_boxplot() +
labs(title = "Side by Side boxplot of the weekly sales of all stores", x = "Store Number", y = "Weekly Sales (USD)")
# Get the data for the store we chose
store_40 = data |> filter(Store == chosen_store)
print(store_40)
library(ggplot2)
# Weekly Sales vs. Temperature including Holiday Flag interaction
ggplot(data = store_40, aes(x = Temperature, y = Weekly_Sales, col = Holiday_Flag)) +
geom_point() +
labs(title = "Weekly Sales vs. Temperature with Holiday Flag interaction", x = "Temperature (Â°C)", y = "Weekly Sales (USD)") +
geom_smooth(method = "lm", se = FALSE)
# Weekly Sales vs. Fuel Price including Holiday Flag interaction
ggplot(data = store_40, aes(x = Fuel_Price, y = Weekly_Sales, col = Holiday_Flag)) +
geom_point() +
labs(title = "Weekly Sales vs. Fuel_Price with Holiday Flag interaction", x = "Fuel Price (USD/gallon)", y = "Weekly Sales (USD)") +
geom_smooth(method = "lm", se = FALSE)
# Weekly Sales vs. CPI
ggplot(data = store_40, aes(x = CPI, y = Weekly_Sales, col = Holiday_Flag)) +
geom_point() +
labs(title = "Weekly Sales vs. CPI index with Holiday Flag interaction", x = "CPI index", y = "Weekly Sales (USD)") +
geom_smooth(method = "lm", se = FALSE)
# Weekly Sales vs. Unemployment
ggplot(data = store_40, aes(x = Unemployment, y = Weekly_Sales, col = Holiday_Flag)) +
geom_point() +
labs(title = "Weekly Sales vs. Unemployment Rate with Holiday Flag interaction", x = "Unemployment Rate", y = "Weekly Sales (USD)") +
geom_smooth(method = "lm", se = FALSE)
ggplot(data = store_40, aes(x = Holiday_Flag, y = Weekly_Sales)) +
geom_boxplot() +
labs(title = "Weekly Sales vs whether or not any Holiday Exists within the week", x = "Holiday Flag", y = "Weekly Sales (USD)")
library(ggplot2)
library(ggcorrplot)
correlation_matrix=cor(store_40[,c('Weekly_Sales','Temperature','Fuel_Price','CPI')])
ggcorrplot(correlation_matrix,lab=TRUE,colors=c("red","white","blue"))+
ggtitle("Correlation Matrix of Walmart Sales Data")
library(car)
model <- lm(Weekly_Sales ~ CPI + Fuel_Price + Temperature + Unemployment + Holiday_Flag, data = store_40)
vif_values <- vif(model)
# VIF with all the covariates
print(vif_values)
# VIF after removing CPI
model_cpi_removed <- lm(Weekly_Sales ~ + Fuel_Price + Temperature + Unemployment + Holiday_Flag, data = store_40)
vif_values_cpi_removed <- vif(model_cpi_removed)
# VIF with vif_values_cpi_removed the covariates
print(vif_values_cpi_removed)
## First remove the outliers
store_40 = store_40 |> filter(Weekly_Sales < 1500000)
## Perform the model selection
models = list()
# Start with full model with 7 covariates
models[[1]] = lm(Weekly_Sales ~ Temperature + Fuel_Price + Unemployment + Holiday_Flag + Temperature:Holiday_Flag + Fuel_Price:Holiday_Flag + Unemployment:Holiday_Flag, data = store_40)
# Second Model with Fuel_Price:Holiday_Flag interaction removed
models[[2]] = lm(Weekly_Sales ~ Temperature + Fuel_Price + Unemployment + Holiday_Flag + Temperature:Holiday_Flag + Unemployment:Holiday_Flag, data = store_40)
# Third Model with Temperature:Holiday_Flag interaction removed
models[[3]] = lm(Weekly_Sales ~ Temperature + Fuel_Price + Unemployment + Holiday_Flag + Unemployment:Holiday_Flag, data = store_40)
# Fourth Model with Unemployment:Holiday_Flag interaction removed
models[[4]] = lm(Weekly_Sales ~ Temperature + Fuel_Price + Unemployment + Holiday_Flag, data = store_40)
# Final Model with Unemployment:Holiday_Flag interaction removed
models[[5]] = lm(Weekly_Sales ~ Temperature + Unemployment + Holiday_Flag, data = store_40)
# Print out the summary of the final model and full model
summary(models[[5]])
# Pretty much replotting the scatterplots above, but this time without the interaction (since they were removed in the backwards selection process)
# Weekly Sales vs. Temperature
ggplot(data = store_40, aes(x = Temperature, y = Weekly_Sales)) +
geom_point() +
labs(title = "Weekly Sales vs. Temperature with Holiday Flag interaction", x = "Temperature (Â°C)", y = "Weekly Sales (USD)") +
geom_smooth(method = "lm", se = FALSE)
# Weekly Sales vs. Unemployment
ggplot(data = store_40, aes(x = Unemployment, y = Weekly_Sales)) +
geom_point() +
labs(title = "Weekly Sales vs. Unemployment Rate with Holiday Flag interaction", x = "Unemployment Rate", y = "Weekly Sales (USD)") +
geom_smooth(method = "lm", se = FALSE)
ggplot(data = store_40, aes(x = Holiday_Flag, y = Weekly_Sales)) +
geom_boxplot() +
labs(title = "Weekly Sales vs whether or not any Holiday Exists within the week", x = "Holiday Flag", y = "Weekly Sales (USD)")
# Residual plot of the fitted values against the residuals
plot(models[[5]]$fitted.values, models[[5]]$residuals, main = "Residual plot for the  residuals of our\n final model against its fitted values", xlab = "Fitted values (Weekly sales in USD)", ylab = "Residual (Weekly sales in USD)")
abline(h = 0, col = "red", lwd = 2, lty = 2)
# Set working directiry
data = read.csv("Walmart_Sales.csv") |> na.omit()
# Modify the contents of the data below
#############
# Change the temperature to celcius
data$Temperature = round((data$Temperature - 32)*(5/9), 2)
# Round the decimal places for the following columns
data$Fuel_Price = round(data$Fuel_Price, 2)
data$CPI = round(data$CPI, 2)
data$Weekly_Sales = round(data$Weekly_Sales, 0)
# Convert Holiday flag to factor (because it's categorical)
data$Holiday_Flag = factor(data$Holiday_Flag)
############
# We want to select the store that represents all the stores well. Therefore, we will select the store that has the median combined average weekly sales and variance of weekly sales. To do so, we will calculate the average and var of weekly sales for every store, then assign a ranking for both statistics, sum them up, then pick the store with the median sum of the ranks.
# First, obtain the summary statistics for each store
data_summary = data |> group_by(Store) |> summarize(mean_weekly_sales = mean(Weekly_Sales), var_weekly_sales = var(Weekly_Sales)) |> mutate(rank_mean_weekly_sales = rank(mean_weekly_sales), rank_var_weekly_sales = rank(var_weekly_sales)) |> mutate(sum_of_ranks = rank_mean_weekly_sales + rank_var_weekly_sales)
# Then raange the rows based on the overall rank
data_summary = data_summary |> arrange(sum_of_ranks)
# Extract the store number we choose (the store with median combined rank)
chosen_store = data_summary[round(nrow(data_summary)/2, 0), 1] |> pull()
print(chosen_store)
# We will use store 40 as our representative
# The boxplot illustrates the average weekly sales for each store, as well as the variance of the sales across its weeks. We can see that store 40 is reasonable
boxplot(data$Weekly_Sales~data$Store, main = "Side by Side boxplot of the weekly sales of all stores", xlab = "Weekly Sales", ylab = "Store Number")
ggplot(data = data, aes(x = factor(Store), y = Weekly_Sales)) +
geom_boxplot() +
geom_boxplot(data = subset(data, category == "40"),
aes(x = factor(Store), y = Weekly_Sales),
fill = "red", color = "black", width = 0.7)) +
# Set working directiry
data = read.csv("Walmart_Sales.csv") |> na.omit()
# Modify the contents of the data below
#############
# Change the temperature to celcius
data$Temperature = round((data$Temperature - 32)*(5/9), 2)
# Round the decimal places for the following columns
data$Fuel_Price = round(data$Fuel_Price, 2)
data$CPI = round(data$CPI, 2)
data$Weekly_Sales = round(data$Weekly_Sales, 0)
# Convert Holiday flag to factor (because it's categorical)
data$Holiday_Flag = factor(data$Holiday_Flag)
############
# We want to select the store that represents all the stores well. Therefore, we will select the store that has the median combined average weekly sales and variance of weekly sales. To do so, we will calculate the average and var of weekly sales for every store, then assign a ranking for both statistics, sum them up, then pick the store with the median sum of the ranks.
# First, obtain the summary statistics for each store
data_summary = data |> group_by(Store) |> summarize(mean_weekly_sales = mean(Weekly_Sales), var_weekly_sales = var(Weekly_Sales)) |> mutate(rank_mean_weekly_sales = rank(mean_weekly_sales), rank_var_weekly_sales = rank(var_weekly_sales)) |> mutate(sum_of_ranks = rank_mean_weekly_sales + rank_var_weekly_sales)
# Then raange the rows based on the overall rank
data_summary = data_summary |> arrange(sum_of_ranks)
# Extract the store number we choose (the store with median combined rank)
chosen_store = data_summary[round(nrow(data_summary)/2, 0), 1] |> pull()
print(chosen_store)
# We will use store 40 as our representative
# The boxplot illustrates the average weekly sales for each store, as well as the variance of the sales across its weeks. We can see that store 40 is reasonable
boxplot(data$Weekly_Sales~data$Store, main = "Side by Side boxplot of the weekly sales of all stores", xlab = "Weekly Sales", ylab = "Store Number")
ggplot(data = data, aes(x = factor(Store), y = Weekly_Sales)) +
geom_boxplot() +
geom_boxplot(data = subset(data, category == "40"),
aes(x = factor(Store), y = Weekly_Sales),
fill = "red", color = "black", width = 0.7) +
labs(title = "Side by Side boxplot of the weekly sales of all stores", x = "Store Number", y = "Weekly Sales (USD)")
# Set working directiry
data = read.csv("Walmart_Sales.csv") |> na.omit()
# Modify the contents of the data below
#############
# Change the temperature to celcius
data$Temperature = round((data$Temperature - 32)*(5/9), 2)
# Round the decimal places for the following columns
data$Fuel_Price = round(data$Fuel_Price, 2)
data$CPI = round(data$CPI, 2)
data$Weekly_Sales = round(data$Weekly_Sales, 0)
# Convert Holiday flag to factor (because it's categorical)
data$Holiday_Flag = factor(data$Holiday_Flag)
############
# We want to select the store that represents all the stores well. Therefore, we will select the store that has the median combined average weekly sales and variance of weekly sales. To do so, we will calculate the average and var of weekly sales for every store, then assign a ranking for both statistics, sum them up, then pick the store with the median sum of the ranks.
# First, obtain the summary statistics for each store
data_summary = data |> group_by(Store) |> summarize(mean_weekly_sales = mean(Weekly_Sales), var_weekly_sales = var(Weekly_Sales)) |> mutate(rank_mean_weekly_sales = rank(mean_weekly_sales), rank_var_weekly_sales = rank(var_weekly_sales)) |> mutate(sum_of_ranks = rank_mean_weekly_sales + rank_var_weekly_sales)
# Then raange the rows based on the overall rank
data_summary = data_summary |> arrange(sum_of_ranks)
# Extract the store number we choose (the store with median combined rank)
chosen_store = data_summary[round(nrow(data_summary)/2, 0), 1] |> pull()
print(chosen_store)
# We will use store 40 as our representative
# The boxplot illustrates the average weekly sales for each store, as well as the variance of the sales across its weeks. We can see that store 40 is reasonable
boxplot(data$Weekly_Sales~data$Store, main = "Side by Side boxplot of the weekly sales of all stores", xlab = "Weekly Sales", ylab = "Store Number")
ggplot(data = data, aes(x = factor(Store), y = Weekly_Sales)) +
geom_boxplot() +
geom_boxplot(data = subset(data, factor(Store) == "40"),
aes(x = factor(Store), y = Weekly_Sales),
fill = "red", color = "black", width = 0.7) +
labs(title = "Side by Side boxplot of the weekly sales of all stores", x = "Store Number", y = "Weekly Sales (USD)")
